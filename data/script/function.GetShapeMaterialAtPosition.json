{
  "name": "GetShapeMaterialAtPosition",
  "arguments": [
    {
      "name": "handle",
      "desc": "Shape handle",
      "optional": false,
      "type": "number"
    },
    {
      "name": "pos",
      "desc": "Position in world space",
      "optional": false,
      "type": "table"
    }
  ],
  "returns": [
    {
      "name": "type",
      "desc": "Material type",
      "optional": false,
      "type": "string"
    },
    {
      "name": "r",
      "desc": "Red",
      "optional": false,
      "type": "number"
    },
    {
      "name": "g",
      "desc": "Green",
      "optional": false,
      "type": "number"
    },
    {
      "name": "b",
      "desc": "Blue",
      "optional": false,
      "type": "number"
    },
    {
      "name": "a",
      "desc": "Alpha",
      "optional": false,
      "type": "number"
    },
    {
      "name": "entry",
      "desc": "Palette entry for voxel (zero if empty)",
      "optional": false,
      "type": "number"
    }
  ],
  "examples": [
    [
      "local shape = 0",
      "function init()",
      "\tshape = FindShape(\"shape\", true)",
      "end",
      "",
      "function tick()",
      "\tlocal pos = GetCameraTransform().pos",
      "\tlocal dir = Vec(0, 0, 1)",
      "\tlocal hit, dist, normal, shape = QueryRaycast(pos, dir, 10)",
      "\tif hit then",
      "\t\tlocal hitPoint = VecAdd(pos, VecScale(dir, dist))",
      "\t\tlocal mat = GetShapeMaterialAtPosition(shape, hitPoint)",
      "\t\tDebugPrint(\"Raycast hit voxel made out of \" .. mat)",
      "\tend",
      "\tDebugLine(pos, VecAdd(pos, VecScale(dir, 10)))",
      "end"
    ]
  ],
  "description": [
    "Return material properties for a particular voxel"
  ]
}