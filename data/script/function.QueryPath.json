{
  "name": "QueryPath",
  "arguments": [
    {
      "name": "start",
      "desc": "World space start point",
      "optional": false,
      "type": "TVec"
    },
    {
      "name": "end",
      "desc": "World space target point",
      "optional": false,
      "type": "TVec"
    },
    {
      "name": "maxDist",
      "desc": "Maximum path length before giving up. Default is infinite.",
      "optional": true,
      "type": "number"
    },
    {
      "name": "targetRadius",
      "desc": "Maximum allowed distance to target in meters. Default is 2.0",
      "optional": true,
      "type": "number"
    },
    {
      "name": "type",
      "desc": "Type of path. Can be \"low\", \"standart\", \"water\", \"flying\". Default is \"standart\"",
      "optional": true,
      "type": "string"
    }
  ],
  "returns": [],
  "examples": [
    [
      "function init()",
      "\tQueryPath(Vec(-10, 0, 0), Vec(10, 0, 0))",
      "end"
    ]
  ],
  "description": [
    "Initiate path planning query. The result will run asynchronously as long as GetPathState",
    "returns \"busy\". An ongoing path query can be aborted with AbortPath. The path planning query",
    "will use the currently set up query filter, just like the other query functions.",
    "Using the 'water' type allows you to build a path within the water.",
    "The 'flying' type builds a path in the entire three-dimensional space."
  ]
}