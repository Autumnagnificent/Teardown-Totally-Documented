{
  "name": "SetShapeCollisionFilter",
  "arguments": [
    {
      "name": "handle",
      "desc": "Shape handle",
      "optional": false,
      "type": "number"
    },
    {
      "name": "layer",
      "desc": "Layer bits (0-255)",
      "optional": false,
      "type": "number"
    },
    {
      "name": "mask",
      "desc": "Mask bits (0-255)",
      "optional": false,
      "type": "number"
    }
  ],
  "returns": [],
  "examples": [
    [
      "local shapeA = 0",
      "local shapeB = 0",
      "local shapeC = 0",
      "local shapeD = 0",
      "function init()",
      "\tshapeA = FindShape(\"shapeA\")",
      "\tshapeB = FindShape(\"shapeB\")",
      "\tshapeC = FindShape(\"shapeC\")",
      "\tshapeD = FindShape(\"shapeD\")",
      "\t--This will put shapes a and b in layer 2 and disable collisions with",
      "\t--object shapes in layers 2, preventing any collisions between the two.",
      "\tSetShapeCollisionFilter(shapeA, 2, 255-2)",
      "\tSetShapeCollisionFilter(shapeB, 2, 255-2)",
      "",
      "\t--This will put shapes c and d in layer 4 and allow collisions with other",
      "\t--shapes in layer 4, but ignore all other collisions with the rest of the world.",
      "\tSetShapeCollisionFilter(shapeC, 4, 4)",
      "\tSetShapeCollisionFilter(shapeD, 4, 4)",
      "end"
    ]
  ],
  "description": [
    "This is used to filter out collisions with other shapes. Each shape can be given a layer ",
    "bitmask (8 bits, 0-255) along with a mask (also 8 bits). The layer of one object must be in",
    "the mask of the other object and vice versa for the collision to be valid. The default layer",
    "for all objects is 1 and the default mask is 255 (collide with all layers)."
  ]
}